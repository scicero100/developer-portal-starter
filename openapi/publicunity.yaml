openapi: 3.0.3
servers:
  - url: https://qa-pxp-cagetransactions-api.azurewebsites.net/api/v1
info:
  description: >-
    This is an API reference for all public Unity services
  version: 1.0.0
  title: Unity
  contact:
    email: salvatore.cicero@pxpfinancial.com
paths:
  /transactions/authorisations:
    servers:
      - url: https://qa-pxpfinancial-api.azurewebsites.net/api/v1  
    post:
      summary: Create a authorisation
      operationId: createAuthorisation
      tags:
        - Transactions
      requestBody:
        description: Authorise a transaction
        required: true      
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant:
                  $ref: "#/components/schemas/merchant"           
                site:
                  $ref: "#/components/schemas/site"
                merchantTransactionReference:
                  $ref: "#/components/schemas/merchantTransactionReference"
                paymentMethod:
                  oneOf:
                    - $ref: "#/components/schemas/card"                  
                    - $ref: "#/components/schemas/ideal"
                    - $ref: "#/components/schemas/applepay"
                authorisationType:
                  $ref: "#/components/schemas/authorisationType" 
                amount:
                  $ref: "#/components/schemas/amount"                  
                shopper:
                  $ref: "#/components/schemas/shopper"
      responses:
        200:
          description: Authorisation Response
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/authorisationResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]"
  /transactions/{systemTransactionReference}/incrementals:
    servers:
      - url: https://qa-pxpfinancial-api.azurewebsites.net/api/v1  
    post:
      summary: Increment a transaction
      operationId: incrementals
      tags:
        - Modifications
      requestBody:
            description: Create an increment
            required: true      
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    merchantTransactionReference:
                      $ref: "#/components/schemas/merchantTransactionReference"
                    amount:
                      $ref: "#/components/schemas/amount"                  
      parameters:
        - name: systemTransactionReference
          in: path
          description: The unique systemTransactionReference with which you want to process the Incremental.
          required: true
          schema:
            $ref: "#/components/schemas/systemTransactionReference"
      responses:
        200:
          description: Voucher Created
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/createVoucherResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]"
  /transactions/{systemTransactionReference}/captures:
    servers:
      - url: https://qa-pxpfinancial-api.azurewebsites.net/api/v1   
    post:
      summary: Capture a transaction
      operationId: captures
      tags:
        - Modifications
      parameters:
        - name: systemTransactionReference
          in: path
          description: The unique systemTransactionReference with which you want to process the Capture.
          required: true
          schema:
            $ref: "#/components/schemas/systemTransactionReference"
      responses:
        200:
          description: Voucher Created
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/createVoucherResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]"
  /transactions/{systemTransactionReference}/refunds:
    servers:
      - url: https://qa-pxpfinancial-api.azurewebsites.net/api/v1  
    post:
      summary: Refund a transaction
      operationId: refunds
      tags:
        - Modifications
      parameters:
        - name: systemTransactionReference
          in: path
          description: The unique systemTransactionReference with which you want to process the Refund.
          required: true
          schema:
            $ref: "#/components/schemas/systemTransactionReference"
      responses:
        200:
          description: Voucher Created
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/createVoucherResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]" 
  /transactions/{systemTransactionReference}/cancels:
    servers:
      - url: https://qa-pxpfinancial-api.azurewebsites.net/api/v1
    post:
      summary: Cancel a transaction
      operationId: cancels
      tags:
        - Modifications
      parameters:
        - name: systemTransactionReference
          in: path
          description: The unique systemTransactionReference with which you want to process a Cancel.
          required: true
          schema:
            $ref: "#/components/schemas/systemTransactionReference"
      responses:
        200:
          description: Voucher Created
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/createVoucherResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]"                        
  /vouchers:
    post:
      summary: Create a Cage Voucher
      operationId: createVoucher
      tags:
        - Cage Transactions   
      requestBody:
        description: Create a Cage Voucher
        required: true      
        content:
          application/json:
            schema:
              type: object
              properties:
                site:
                  $ref: "#/components/schemas/site"
                voucherNumber:
                  $ref: "#/components/schemas/voucherNumber"
                amount:
                  $ref: "#/components/schemas/amount"               
                shopper:
                  $ref: "#/components/schemas/shopper"
      responses:
        200:
          description: Voucher Created
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/createVoucherResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]"   
  /sites/{site}/vouchers/{voucherNumber}:
    get:
      summary: Get Cage Voucher
      operationId: getVoucher
      tags:
        - Cage Transactions
      parameters:
        - name: site
          in: path
          description: The unique site identifier, with which you want to process the transaction. This can be for example a store, hotel, a website etc. This value is generated by PXP Financial
          required: true
          schema:
            type: string
            maxLength: 20
            example: "SITE-001"
        - name: voucherNumber
          in: path
          description: This is the voucher number required by the shopper to make a withdrawal
          required: true
          schema:
            type: string
            maxLength: 50
            example: "1234567890"
      responses:
        200:
          description: State of Voucher
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/voucherResponse"
              examples: 
                  Voucher Created:
                    value: 
                      voucherNumber: "1234567890"
                      state: "Created"
                      stateMessage: "Voucher Created"
                      amount: 30.32
                      currency: USD
                      shopper:
                        id: "shopper_01"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1982-07-12"
                        email: "john.doe@pxpfinancial.com"
                  Voucher Paid:
                    value: 
                      voucherNumber: "1234567890"
                      state: "Paid"
                      stateMessage: "Voucher Paid"
                      amount: 30.32
                      currency: USD
                      paymentTypeAmounts:
                        cash: 10.08
                        cheque: 10.08
                        chips: 5.08
                        other: 5.08
                      shopper:
                        id: "shopper_01"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1982-07-12"
                        email: "john.doe@pxpfinancial.com"
                  Voucher Expired:
                    value: 
                      voucherNumber: "1234567890"
                      state: "Expired"                   
                      stateMessage: "Voucher Expired"
                      amount: 30.32
                      currency: USD
                      shopper:
                        id: "shopper_01"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1982-07-12"
                        email: "john.doe@pxpfinancial.com"                    
  /notifications:
    post:
      summary: Transaction Notification
      operationId: transactionNotification
      tags:
        - Notifications   
      requestBody:
        description: Transaction Notification
        required: true      
        content:
          application/json:
            schema:
              properties:
                event:
                  type: object
                  properties:
                    code:
                      type: string
                      enum:
                        - approved
                        - authorised
                        - error
                    date:
                      type: string
                      example: "2021-06-28T18:03:50+01:00"
                merchant:
                  $ref: "#/components/schemas/merchant"
                site:
                  $ref: "#/components/schemas/site"
                systemTransactionReference:
                  $ref: "#/components/schemas/systemTransactionReference"
                merchantTransactionReference:
                  $ref: "#/components/schemas/merchantTransactionReference"
                amount:
                  $ref: "#/components/schemas/amount"
      responses:
        200:
          description: Voucher Created
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/createVoucherResponse"               
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        400:
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - reason
                properties:   
                  code:
                    type: string                
                    example: "INVALID_REQUEST"
                  reason:
                    type: string                
                    example: "One or more validation errors occurred"
                  details:
                    type: array
                    items: {}
                    example: "['$.voucherNumber' - The voucherNumber field is required]"      
  /merchants:
    servers:
      - url: https://qa-pxp-onboarding-api.azurewebsites.net/api/v1
    get:
      summary: List all merchants
      operationId: listMerchants
      tags:
        - Merchant Setup
      parameters:
        - name: partner
          in: query
          description: The unique partner identifier. This value is generated by PXP Financial
          schema:
            type: string
            maxLength: 20
            example: "PART-0001"
      responses:
        200:
          description: An array of merchants
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/merchants"   
  /merchants/{merchant}:
    servers:
      - url: https://qa-pxp-onboarding-api.azurewebsites.net/api/v1
    get:
      summary: Get merchant details
      operationId: GetMerchant
      tags:
        - Merchant Setup
      parameters:
        - name: merchant
          in: path
          description: The unique merchant identifier. This value is generated by PXP Financial
          required: true
          schema:
            type: string
            maxLength: 20
            example: "MERC-0001"
      responses:
        200:
          description: Merchant details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/merchants"                     
  /sites:
    servers:
      - url: https://qa-pxp-onboarding-api.azurewebsites.net/api/v1
    get:
      summary: List all sites
      operationId: listSites
      tags:
        - Merchant Setup
      parameters:
        - name: partner
          in: query
          description: The unique partner identifier. This value is generated by PXP Financial
          schema:
            type: string
            maxLength: 20
            example: "PART-0001"
        - name: merchant
          in: query
          description: The unique merchant identifier. This value is generated by PXP Financial
          schema:
            type: string
            maxLength: 20
            example: "MERC-0001"            
      responses:
        200:
          description: An array of sites
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: "#/components/schemas/sites"
  /sites/{site}:
    servers:
      - url: https://qa-pxp-onboarding-api.azurewebsites.net/api/v1
    get:
      summary: Get site details
      operationId: getSite
      tags:
        - Merchant Setup
      parameters:
        - name: site
          in: path
          description: The unique site identifier. This value is generated by PXP Financial
          required: true
          schema:
            type: string
            maxLength: 20
            example: "SITE-001"
      responses:
        200:
          description: Site Details
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/sites"               
  /currencies:
    servers:
      - url: https://qa-pxp-systemsetup-api.azurewebsites.net/api/v1
    get:
      summary: List all currencies
      operationId: listCurrencies
      tags:
        - System Setup
      parameters:
        - name: currencyCode
          in: query
          description: "The ISO 4217 code of the currency"
          schema:
            type: string
            minLength: 3
            maxLength: 3
            example: "GBP"
      responses:
        200:
          description: An array of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: "#/components/schemas/currencies"
  /countries:
    servers:
      - url: https://qa-pxp-systemsetup-api.azurewebsites.net/api/v1
    get:
      summary: List all countries
      operationId: listCoutries
      tags:
        - System Setup
      parameters:
        - name: countryAlphaThreeCode
          in: query
          description: The ISO 3166-1 alpha three code of the country
          schema:
            type: string
            minLength: 3
            maxLength: 3
            example: "GBR"
      responses:
        200:
          description: An array of countries
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: "#/components/schemas/countries"
  /languages:
    servers:
      - url: https://qa-pxp-systemsetup-api.azurewebsites.net/api/v1
    get:
      summary: List all languages
      operationId: listLanguages
      tags:
        - System Setup
      parameters:
        - name: threeLetterCode
          in: query
          description: The ISO 639-1 three letter language code
          schema:
            type: string
            minLength: 3
            maxLength: 3
            example: "eng"
      responses:
        200:
          description: An array of languages
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: "#/components/schemas/languages"                   
components:
  schemas:
    merchant:
      type: string
      required:
        - merchant
      description: The unique merchant identifier, with which you want to process the transaction. This can be for example a store, hotel, a website etc. This value is generated by PXP Financial
      example: "MERC-0001"
      maximum: 20
    site:
      type: string
      required: 
        - site      
      description: The unique site identifier, with which you want to process the transaction. This can be for example a store, hotel, a website etc. This value is generated by PXP Financial
      example: "SITE-0001"
      maximum: 20
    merchantOrderReference:
      required: 
        - merchantOrderReference
      type: string
      description: The merchantTransactionReference is used to uniquely identify a transaction. This Id is used in all communication with you about the transaction status. There must be a unique value per transaction
      example: "This_is_my_merchant_transaction_Id"
      maximum: 50            
    merchantTransactionReference:
      required: 
        - merchantTransactionReference
      type: string
      description: The merchantTransactionReference is used to uniquely identify a transaction. This Id is used in all communication with you about the transaction status. There must be a unique value per transaction
      example: "This_is_my_merchant_transaction_Id"
      maximum: 50 
    systemTransactionReference:
      required: 
        - systemTransactionReference
      type: string
      example: 1ed768bb-e88a-4636-91ae-67927ccbb02b                    
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minimum: 36
      maximum: 36  
      description: This is the unique transaction reference returned by Pxp Financial      #
    transactionState:
      required:
        - state
      type: string
      enum:
        - approved
        - authorised
        - declined
        - referred
      example: approved
      description: This is the state of the transaction
    transactionStateMessage:
      required:
        - state
      type: string
      example: approved
      description: This is the state of the transaction
    providerState:
      required:
        - state
      type: string
      example: approved
      description: This is the state of the transaction returned by the provider
    providerStateMessage:
      required:
        - state
      type: string
      example: approved
      description: This is the state of the transaction returned by the provider     
    voucherNumber:
      required: 
        - voucherNumber    
      type: string
      description: This is the voucher number required by the shopper to make a withdrawal
      maximum: 50
      example: "1234567890"
    amount:
      type: object
      required:
        - amount      
      properties:
        value:
          type: object
          description: This is the amount of the transaction.  The numbers after the decimal will be zero padded if they are less than the expected currency exponent i.e. GBP 1.1 = GBP 1.10 OR EUR 1 = EUR 1.00 OR BHD 1.3 = 1.300  The transaction will be rejected if numbers after the decimal are greater than the expected currency exponent i.e. GBP 1.234 OR if a decimal is supplied when the currency of exponent does not require it i.e. JPY 1.0
          example: 30.32
        currency:
          type: string
          required: 
            - currency
          description: This is the currency of the transaction. This is the currency code. A three character code in accordance with ISO 4217
          minimum: 3
          maximum: 3
          example: "EUR"
    paymentMethodType:
      type: string
      enum:
        - astroPay
        - card
        - cardPresent
        - citadel
        - eps
        - echeckSelect
        - finTech
        - giropay
        - ideal
        - idebit
        - instadebit
        - interac
        - p24
        - payWithMyBank
        - platba24
        - pinBank
        - skrill
        - sofort
        - trustly
        - trustlyPayPlay
        - vipPreferred
      description: The type of payment method used for the transaction
      example: "card"
    authorisationType:
      type: string
      enum:
        - preAuthorisation
        - final
      description: This is the type of authorisation
      example: "final"      
    cage:
      type: object
      properties:
        cage:
          type: object
          properties:
            shopper: 
              $ref: "#/components/schemas/shopper"
    card:
      type: object
      description: "Required if paymentMethod is of type 'Card'" 
      properties:
        card:
          type: object
          required:
            - number
            - expiryMonth
            - expiryYear
            - holderName
            - cvc
          properties:
            number:
              type: string
              pattern: '^[0-9]'
              example: "4444333322221111"
              maximum: 19      
              description: This is the card holder number
            expiryMonth: 
              type: string
              pattern: '^[0-9]'
              example: "03"
              maximum: 2      
              description: This is the expiry month [MM] of the card
            expiryYear: 
              type: string
              pattern: '^[0-9]'
              example: "2025"
              maximum: 4      
              description: This is the expiry year [YYYY] of the card
            holderName: 
              type: string
              pattern: '^[0-9]'
              example: "2025"
              maximum: 4
              description: This is card holders name
            cvc: 
              type: string
              pattern: '^[0-9]'
              example: "123"
              maximum: 4      
              description: This is the cardholder's verification code
    applepay:
      type: object
      description: "Required if payment method is of type 'applepay'" 
      properties:
        applepay:
          type: object
          required:
            - token
          properties:
            token:
              type: string
              example: "VNRWtuNlNEWkRCSm1xWndjMDFFbktkQU"
              maximum: 100      
              description: "This is the applepay token"    
    ideal:
      type: object
      description: "Required if payment method is of type 'applepay'" 
      properties:
        ideal:
          type: object
          required:
            - issuer
          properties:
            issuer:
              type: string
              example: "1121"
              maximum: 100      
              description: "This is the Ideal issuer"
    shopperId:
      type: object 
      required:
        - id
      properties:
        id:
          type: string
          pattern: '^[A-Za-z0-9 _-]'
          example: "Shopper_01"
          maximum: 50      
          description: This is the unique identifier of the shopper
    error:
      required:
        - code
        - reason
      properties:
        code:
          type: string
        reason:
          type: string
        details:
          type: array  
          items: {}  
    paymentTypeAmounts:
      description: "This is a collection of payment types used that equal the amount for a cage deposit or withdrawal"
      required:
        - cash
        - chip
        - cheque
        - other
      properties:
        cash:
          type: number
          example: 10.08
          description: "This is the total amount in cash in order to make a Cage deposit or withdrawal"
        chip:
          type: number
          example: 10.08
          description: "This is the total amount in chips in order to make a Cage deposit or withdrawal"
        cheque:
          type: number
          example: 5.08
          description: "This is the total amount in cheques in order to make a Cage deposit or withdrawal"
        other: 
          type: number
          example: 5.08
          description: "This is the total amount other than cash, chips or cheques in order to make a Cage deposit or withdrawal"
    shopper:
      description: "This is the details of the shopper"
      required:
        - id
        - firstName
        - lastName
        - dateOfBirth
        - email
      properties:
        id:
          type: string
          pattern: '^[A-Za-z0-9 _-]'
          example: "Shopper_01"
          maximum: 50      
          description: This is the unique identifier of the shopper
        firstName:
          type: string
          description: This is the first name of the shopper
          example: John          
          maximum: 100
        lastName:
          type: string
          maximum: 100
          example: Doe
          description: This is the last name of the shopper
        dateOfBirth: 
          type: string
          minimum: 10
          maximum: 10
          format: date
          description: This is the date of birth of the shopper. Format [YYYY-MM-DD]
        email: 
          type: string
          maximum: 100
          format: email
          description: This is the email address of the shopper
          example: "john.doe@pxpfinancial.com"
    voucherResponse:
      required:
        - voucherNumber
        - state
        - stateMessage
        - amount
        - paymentTypeAmounts
        - shopper
      properties:
        voucherNumber: 
            $ref: "#/components/schemas/voucherNumber"
            description: "This is the result of the Voucher Creation"
            example: "Created"
        state: 
            type: string
            enum:
              - Created
              - Paid
              - Expired
            example: "Created"
        stateMessage:
          type: string
          example: "Voucher Created"
          description: "This is the result message of the Voucher Creation"          
        amount: 
          $ref: "#/components/schemas/amount"
        paymentTypeAmounts:
          $ref: "#/components/schemas/paymentTypeAmounts"                    
        shopper:
          $ref: "#/components/schemas/shopper"
    authorisationResponse:
      required:
        - systemTransactionReference
        - state
        - stateMessage
        - approvalCode
        - cvcResult
        - avsResult
      properties:
        systemTransactionReference:
          $ref: "#/components/schemas/systemTransactionReference"
        state:
          $ref: "#/components/schemas/transactionState"
        stateMessage:
          $ref: "#/components/schemas/transactionStateMessage"          
        authorityCode:
          type: string
          required:
            - authorityCode
          example: "123456"
        cvcResult:
          type: string
          required:
            - cvcResult
          enum:
            - noInformationAvailable
            - cardSecurityCodeMatched
            - cardSecurityCodeNotMatched
            - cardSecurityCodeNotChecked
          description: This is the card verification result
        avsResult:
          type: string
          required:
            - avsResult
          enum:
            - noInformationAvailable
            - postCodeMatchedAddressMatched
            - postCodeMatchedAddressNotMatched
            - postCodeMatchedAddressNotChecked
            - postCodeNotMatchedAddressMatched
            - postCodeNotMatchedAddressNotMatched
            - postCodeNotMatchedAddressNotChecked
            - postCodeNotCheckedAddressMatthed
            - postCodeNotCheckedAddressNotMatched
            - postCodeNotCheckedAddressNotChecked
            - postCodeMatchedANDAddressPartialMatch
            - postCodePartialMatchAddressMatched
            - postCodePartialMatchAddressPartialMatch
            - postCodeNotMatchedAddressPartialMatch
            - postCodePartialMatchAddressNotMatched
            - postCodePartialMatchAddressNotChecked
            - postCodeNotCheckedAddressPartialMatch
        providerResult:
          $ref: "#/components/schemas/providerResult"          
    providerResult:
      required:
        - state
        - stateMessage
        - merchantId
        - cardSchemeReference
        - rawCvcResult
        - rawAvsResult
      properties:
        state:
          $ref: "#/components/schemas/providerState"
        stateMessage:
          $ref: "#/components/schemas/providerStateMessage"
        merchantId:
          type: string
          required: 
            - merchantId
          example: 77772182
        cardSchemeReference:
          type: string
          required:
            - cardSchemeReference
          example: "A125221525"
        rawCvcResult:
          type: string
          example: A
        rawAvsResult:
          type: string
          example: D
    createVoucherResponse:
      required:
        - state
        - stateMessage
      properties:
        state:
          type: string
          example: "created"
          enum:
            - created
          description: "This is the result of the Voucher Creation"
        stateMessage:
          type: string
          example: "Voucher Created"
          description: "This is the result message of the Voucher Creation"
    transactionResponse:
      required:
        - systemTransactionReference
        - state
        - stateMessage
      properties:
        systemTransactionReference:
          type: string
          example: 1ed768bb-e88a-4636-91ae-67927ccbb02b                    
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          minimum: 36
          maximum: 36  
          description: This is the unique transaction reference returned by Pxp Financial
        state:
          type: string
          example: "Approved"
          description: This is the result of the transaction
          enum:
            - Approved
        stateMessage:
          type: string
          example: "Approved"
          description: This is the result message of the transaction
    merchants:
      required:
        - id
        - name
        - merchantCategoryCode
        - address  
      properties:
          id: 
            type: string
            example: "MERC-0001"
            maximum: 20
            description: The unique merchant identifier, with which you want to process the transaction. This value is generated by PXP Financial
          name: 
            type: string  
            example: "Merchant Account 1"
            maximum: 100
            description: The merchant name, with which you want to process the transaction. This value is generated by PXP Financial
          merchantCategoryCode: 
            type: string  
            example: "5541"
            minimum: 4
            maximum: 4
            description: The merchant category code assigned to the merchant
          address: 
            $ref: "#/components/schemas/address"
            description: The address of the merchant
    sites:
      required:
        - id
        - name
        - merchantId
      properties:
          id: 
            type: string
            example: "SITE-0001"
            maximum: 20
            description: The unique site identifier, with which you want to process the transaction. This value is generated by PXP Financial
          name: 
            type: string  
            example: "Site 1"
            maximum: 100
            description: The site name, with which you want to process the transaction. This value is generated by PXP Financial
          merchantId: 
            type: string  
            example: "MERC-0001"
            maximum: 20
            description: The unique merchant identifier associated with the site identifier 
    address:
      required:
        - street
        - houseNoName
        - postalCode
        - city
        - state
        - country
      properties:
        street:
          type: string
          example: "Street Name"
          description: "The street name of the merchant"
          maximum: 100         
        houseNoName:
          type: string
          example: "House Name"
          description: "The house name or number of the merchant"
          maximum: 100  
        postalCode:
          type: string
          example: "Postal Code"
          description: "The postal code of the merchant"
          maximum: 15
        city:
          type: string
          example: "City"
          description: "The city of the merchant"
          maximum: 100  
        state:
          type: string
          example: "State"
          description: "The state of the merchant"
          maximum: 100
        country:
          type: string
          example: "GB"
          description: "The country of the merchant.  This is an ISO 3166-1 format"
          minimum: 2
          maximum: 2            
    currencies:
      required:
        - code
        - numericCode
        - name
        - symbol
        - exponent
      properties:
          code: 
            type: string
            example: "GBP"
            minimum: 3
            maximum: 3
            description: "The ISO 4217 code of the currency"
          numericCode: 
            type: string  
            example: "826"
            minimum: 3
            maximum: 3
            description: "The ISO 4217 numeric code of the currency"
          name: 
            type: string  
            example: "British Pound"
            description: "The name of the currency"
          symbol: 
            type: string  
            example: "£"
            description: "The symbol of the currency"
          exponent: 
            type: integer  
            example: 2
            description: "The minor units of the currency"
    countries:
      required:
        - twoLetterCode
        - threeLetterCode
        - numericCode
        - name
      properties:
        twoLetterCode: 
          type: string
          example: "GB"
          minimum: 2
          maximum: 2
          description: "The ISO 3166-1 two letter code of the country"
        threeLetterCode: 
          type: string  
          example: "GBR"
          minimum: 3
          maximum: 3
          description: "The ISO 3166-1 three letter code of the country"
        numericCode: 
          type: string
          minimum: 3
          maximum: 3            
          example: "826"
          description: "The ISO 3166-1 numeric code of the country"
        name: 
          type: string  
          example: "The United Kingdom of Great Britain and Northern Ireland"
          description: The name of the country
    languages:
      required:
        - twoLetterCode
        - threeLetterCode
        - name
      properties:
        twoLetterCode: 
          type: string
          example: "en"
          minimum: 2
          maximum: 2
          description: "The ISO 639-1 two letter code of the language"
        threeLetterCode:
          type: string  
          example: "eng"
          minimum: 3
          maximum: 3
          description: "The ISO 639-1 three letter code of the language"
        name: 
          type: string  
          example: "English"
          description: The name of the language
    moto:
      type: object
      description: "Required if paymentMethod is of type 'card'" 
      properties:
        moto:
          type: object
          properties:
            addressVerification:
              $ref: "#/components/schemas/addressVerification"
    ecom:
      type: object
      description: "Required if paymentMethod is of type 'card'" 
      properties:
        ecom:
          type: object
          properties:
            addressVerification:
              $ref: "#/components/schemas/addressVerification"    
            threeDSecure:
              $ref: "#/components/schemas/threeDSecure"
    addressVerification:
      required:
        - houseNumberOrName
        - postalCode
        - country          
      properties:
        houseNumberOrName: 
          type: string
          example: "en"
          maximum: 100
          description: "The number or name of the house"
        postalCode:
          type: string  
          example: ""
          maximum: 10
          description: "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries"
        country: 
          type: string  
          example: "GB"
          description: "The two-character country code as defined in ISO-3166-1 alpha-2"   
    threeDSecure:
      required:
        - status
        - threeDSecureVersion
      properties:
        status: 
          type: string
          example: "frictionlessAuthenticated"
          enum:
            - frictionlessAuthenticated
          description: "This is the final status during the 3D Secure process. Refer to ThreeDSecure Status under Elements (CONDITIONAL: Required if not supplying threeDSecureId)"
        threeDSecureVersion:
          type: string  
          example: "2.1.0"
          description: "This is the 3D Secure version returned by PXP's Three D Secure Service. Must be in the format N.N.N (CONDITIONAL: Required if not supplying threeDSecureId)"